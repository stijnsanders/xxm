var snaps=[
"xxm Tutorial 1<br />Quick guide with screenshots<br />How to install xxmLocal,<br />xxmIsapi and xxmHttp<br /><span style='font-size:10pt;'>Use navigation on top or click image to proceed.</span>",
"This is a default Windows install, with IIS. Delphi 7 is installed also.",
"Download xxm binaries...<br /><span style='font-size:10pt'>see <a href='http://xxm.sourceforge.net/download.html' target='_blank'>xxm/download</a></span>",
"Create an appropriate directory and extract",
"Register xxmLocalDev.dll (An installer should take care of this, but for now this really is all that's needed to get up and running.)",
"Start a blank project:<br />1) create a project directory",
"Start a blank project:<br />2) use xxmProject.exe to create a project in this directory",
"Start a blank project:<br />3) Enter project name, and hit 'Register for local handler'",
"Now open it in Internet Explorer!<br /><span style='font-size:10pt;'>enter \"xxm:MyFirstXxmProject\"</span><br />xxmLocalDev will generate Delphi files, compile it and...<br />we get a \"File not found\"? ...",
"That's right, there are no pages defined yet! Let's make one:",
"If no page is specified, 'Default.xxm' is searched<br /><span style='font-size:10pt'>(by default, you can change this in \"src\\xxmp.pas\" and/or \"xxmFReg.pas\")</span>",
"Edit it, and hit Internet Explorer's refresh button (F5)!",
"Yes, it works! Now throw in some pascal.<br /><span style='font-size:10pt;'>see <a href='http://xxm.sourceforge.net/ref.html#syntax' target='_blank'>xxm/ref#syntax</a></span>",
"A quick tour begind the scenes:<br />- IE loads xxmLocal(Dev).dll,<br />- it searches an xxl for the project in the registry,<br />- loads it and requests an IXxmProject interface;<br />from there on in it's up to you.<br />The default xxmp.pas (which is free for you to edit) uses the default fragment registry (xxmFReg) which stores pages and fragments by local path and filename.",
"Let's try a demo project...<br /><span style='font-size:10pt'>see <a href='http://xxm.sourceforge.net/download.html' target='_blank'>xxm/download</a></span>",
"Open the project file (Web.xxmp) in xxmProject.exe",
"Hit the 'Register for local handler' button<br />(this uses the 'Project name' value)",
"And open it in IE!<br /><span style='font-size:10pt;'>enter \"xxm:demo\"</span>",
"And it all works!",
"Let's go live with these! First a quick and dirty method: call over xxmIsapiEx.dll as an executable<br /><span style='font-size:10pt;'>enter \"localhost/Scripts/xxmIsapiEx.dll\"</span>",
"It uses a project registry in a local XML file<br /><span style='font-size:9pt;white-space:nowrap;'>&lt;ProjectRegistry&gt;<br />&lt;Project Name=\"hello\"&gt;&lt;ModulePath&gt;C:\\InetPub\\xxm\\MyFirstXxmProject\\MyFirstXxmProject.xxl&lt;/ModulePath&gt;&lt;/Project&gt;<br />&lt;Project Name=\"demo\"&gt;&lt;ModulePath&gt;C:\\InetPub\\xxm\\demo\\03 Data\\demo.xxl&lt;/ModulePath&gt;&lt;/Project&gt;<br />&lt;/ProjectRegistry&gt;</span>",
"Now the proper way: copy only the files needed for a live environment, and rig a virt-dir <span style='font-size:10pt'>or website</span> to pass all requests through an extension mapping. (I prefer xxmIsapiAU.dll to enable xxl updates without IIS downtime!) Tip: use a separate xxmIsapi*.dll instance <span style='font-size:10pt'>with its own xxm.xml</span> per project on the server, this enables per-project upgrades if xxm should release a new version.",
"Optionally, set Isolation High to have a separate process to control identity and permissions",
"If you don't need all the extra's IIS provides, use the stand-alone server, as a user-controlled process...",
"... or as an NT-service"];