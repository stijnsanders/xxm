v1.2.8.510
- fixed bug with TXxmWebSocket and ReleaseContexts
- fixed bug with xxm*Svc*.exe handlers

v1.2.8.500
- deprecated: xxmLocal, xxmRun
- deprecated: xxm.xml auto-conversion (see v1.2.5)
- fixed bug with multiple preCompileCommand/compileCommand/postCompileCommand entries
- fixed support for WebSockets with FireFox
- support for multiple file upload

v1.2.7.477
- Negotiate: like NTLM but less in danger of getting removed in Windows 11...
- NTLM/Negotiate: cache by SessionID to avoid 401's on every request
- parse ?x&y=1 as 'x'='','y'='1' in query string and form data (was 'x&y'='1' previously)
- per context project entry cache (avoids project registry lock on each request)

v1.2.6.466
- issue converting IPv6 address to string
- issue with IXxmParameterPostFile.SaveToFile
- issue with xxmWebSocket.pas: frames recieved in a single packet were not processed
- issue with xxmISAPI* spooling larger static files
- xxmHttp: WinSock 2.2 (ws2_32.dll)
- xxmp.pas: respond to OPTIONS and TRACE with 501 Not Implemented
- jsonDoc.pas: v1.2.2
- switched to Delphi Community Edition
- bug with IXxmContextSuspend.Suspend with more than one distinct EventKey

v1.2.5.450
- project registry "xxm.json" (auto-conversion of "xxm.xml")
- project file "Web.xxmp" JSON (auto-conversion from XML)
    ### ATTENTION ### ATTENTION ### ATTENTION ###
    xxmProject and xxm handlers are fitted with a transitional
    automatic conversion procedure that will convert XML project files (Web.xxmp)
    and the project registry (xxm.xml) into JSON files. (Web.xxmp in place,
    storing a Web_xxmp.bak copy; xxm.json)
    This may cause incompatibilities if different xxm versions are required to
    coexist on the same installation(s).
    This procedure (and all code using XML) is scheduled to be removed at a
    later, currently undetermined, version.
- fixed issue with custom parserValues spilling into next file processed
- IXxm* interfaces: all string arguments now with 'const'
	### ATTENTION ### ATTENTION ### ATTENTION ###
	This may cause errors on generated xxmp.pas:
		xxmp.pas() Error: Declaration of 'LoadPage' differs from previous declaration
		xxmp.pas() Error: Declaration of 'LoadFragment' differs from previous declaration
	Please update both methods by adding 'const' to the arguments with a string type.
- xxmIsapi*: Redirect: set 'Cache-control' to 'nocache' unless it was set already
- xxmHttpAU: added manifest to avoid default UAC elevation request
- xxmHttp,xxmHSys: Transfer-Encoding chunked (set Context.BufferSize to something >0 !!!)
- xxmHttp,xxmHSys: NTLM authentication (using SSPI, add "ntlm":true to the project in xxm.json)
- xxmHSys2: WebSocket support
- DispositionAttach: replace unacceptable characters (\/:*?"<>|) with '_'
- SendFile, SendStream before header sent, will by default have ContentType
  application/octet-stream instead of text/html, unless already set before
  (with Context.ContentType!)

v1.2.4.430
- xxmISAPI: fixed issue with open connections not accepting new requests

v1.2.4.424
- revised context object lifetime management (lock-less reference counting)
- demo 7 "Resources": added "If-Modified-Since"
- demo 12 "Long Polling": added example EventSource (text/event-stream)

v1.2.3.408
- WebSocket support (only xxmHttp,xxmSyna,xxmAhttpd,xxmHost)
- SCGI handler: xxmSCGI*
- serve handler's icon for "/favicon.ico" (project registry override)
- fixed file handle leak on serving 304 responses on static files
- fixed issue with XXL's that require DLL's in same folder
- fixed issue with non-latin encoded compiler error messages
- fixed issue with non-latin encoded uploaded file name
- fixed issue with IP-addresses
- xxmAhttpd: Apache 2.4 support (no longer supports 2.2!)

v1.2.2.369
- error page: back link when referer, refresh link only on GET
- LoadCopy by library file signature to avoid multiple copies being loaded, retries on access denied
- default xxmSession on TStringList (sorted!) instead of TObjectList
- parser: in code, treat lines that start with "<" and end with ">" as HTML,
  allow [[#]] section on one line in a code section
- recycle allocated memory buffers, use HeapAlloc instead of GlobalAlloc
- long polling support (IXxmContextSuspend, IXxmProjectEvents2)
- xxmHttp: thread to wait on groups of (slow) connections that have all content in buffer
- xxmHttp: support basic authentication (401, "WWW-Authenticate: Basic")
- xxmIsapi: asynchronous sending on more than 64KiB in buffer (project should set Context.ContentBuffer!)
- xxmLocal: custom handling of WWW-Authenticate,
  when debugging hold 'X' on authenticated page load to clear stored credentials
- xxmConv: /noupdate switch
- revised thread scheduling from thread pool

v1.2.1.337
- xxmHttp: IPv6 support
- xxmHttp: support OPTIONS, HEAD, TRACE
- xxmISAPI: fixed initialization issue
- fixed issue mapping error line numbers on files in a deeper folder
- fixed issue with BufferSize and smaller responses

v1.2.0.325
- revised internal send/buffer logic
- when Context.BufferSize is set, don't send header rightaway, and add Content-Length when all of content fits in buffer
- xxmHttp: fixed issue when posting 1MB or more
- demo 03 ADO: switched query store to plain SQL file
- AutoBuild: errors shown on local path to xxm file instead of .pas filename
- URLEncode([]) and [[?]] syntax
- extra block prefixes for use with parser values: & % . , ;

v1.1.9.300
- sourceforge repository caught up with previous private repo, so version build number will now follow svn revision number
- support for If-Modified-Since, If-Unmodified-Since headers
- serving content-files uses FILE_FLAG_SEQUENTIAL_SCAN
- xxmHttp: switched to custom winsock wrapper
- xxmHttp: central holding for 'keep' connections awaiting requests
- xxmLocal: fixed issue with first request for a static file after reload
- fixed issue with multi-byte ANSI encodings

v1.1.8.295
- optional project interface: IXxmProjectEvents1
- parser values: $l replaced by source line number, $v by current, $d by default
- set project default parser values from Web.xxmp
- xxmHttp: replaced first request parsing ReceiveLn with ReceiveBuf
- xxmHttp,xxmHost,xxmHSys: 'threads' option to set thread pool size
- added mongodb demo: "03 Data MongoDB"
- xxmConv: extra proto template fields (used by 'skip the handler' builds)
- xxmConv: /nolinemaps option
- signatures file "Web.xxmp.~db" changed to "src\xxmp.~db"
- fixed issue with access denied on loadcopy under load

v1.1.7.292
- xxmString: TStringContext.SaveToFile respects AutoEncoding parameter
- xxm.xml project registry revised, MSXML now only used for parsing.
- project registries use CompareText instead of comparing LowerCase'd strings
- 'embed HTML syntax': now supports start characters e.g. <p>>=i<</p> instead of <p>[[=i]]</p>
- xxmProject include unit files dialog supports multi-select
- xxmIsapi: fixed Redirect with https
- xxmHSys: support for https (pass argument "SecurePort=")
- xxmHSys2: support for HTTPAPI 2.0

v1.1.6.288
- security: EOL's in added header fields are disallowed
- fixed issue with URLEncoded and UTF8 encoded characters
- fixed issue when setting BufferSize from non-zero to zero
- renamed xxmApache to xxmAhttpd, Apache httpd license states non-ASF projects may not use the Apache name
- xxmProject: register with xxm.xml
- xxmIsapi: override default buffering of IIS7 (remember to set Context.BufferSize!)
- xxm.xml supports relative paths in <ModulePath>
- Delphi XE2 support (as well as continued Delphi 7 support with the same source)

v1.1.5.285
- xxmHSYS: HTTPAPI handler
- bug fixed: parameters were parsed from request body multiple times
- when BufferSize is set, contexts keep buffers to save on allocating and releasing memory

v1.1.4.284
- upload progress monitoring interface
- new IXxmContext members: BufferSize, Flush
- optional project interface to handle exceptions: IXxmProjectEvents

v1.1.3.282
- exception handling: error message detects ContentType text/plain
- redirect responses set Content-Length to keep connection
- open code block at end allowed
- xxmHttp LoadCopy parameter/setting (set LoadCopy=0 when debugging with xxmHttp as host application)
- send 204 response when no content
- xxmGecko: support for FireFox 8, revised data ready reporting
- cross-project includes with Context.Include('xxm://a/b') when AllowInclude=1 in project registry (default disabled)

v1.1.2.280
- revised auto-build/auto-update: global mutex instead of local critical section
- xxmProject: <CompileCommand> may contain [[HandlerPath]] to correctly include public units out of the box
- xxmIsapi: support for multi-process hosting (multiple w3wp.exe instances)
- xxmLocal: fixed ContextString(csUserAgent)
- xxmGecko: support for FireFox 7 (only, couldn't get 6 to work any more, sorry)
- xxmHttp,xxmIsapi: keep connection when Context-Length set (e.g. files)
- xxmHttp: fixed issue with streaming post data less than 1MB

v1.1.1.277
- 'embed HTML syntax': use "<<html>>" instead of "]]<html>[["
- Web.xxmp: multiple <PreCompileCommand>,<CompileCommand>,<PostCompileCommand> allowed
- added files from module resources demo
- Web.xxmp,xxmProject: add <Resource> files to check for changes to force auto-build
- xxmHttp,xxmIsapi: fixed bug with saving uploaded files
- xxmIsapi: post data not all read up front, post data reads read from connection as needed
- xxmLocal: fixed bug with javascript authorization (document.domain)
- xxmGecko: support for FireFox 4 (only, couldn't get 3.6 to work any more, sorry)

v1.1.0.272

- xxm.pas: IXxmProject.LoadFragment Context, RelativeTo parameter added
- xxmFReg.pas: GetClass changed to GetFragment, resolves relative include paths
    ### ATTENTION ### ATTENTION ### ATTENTION ###
    This will break all existing projects
        revise LoadPage and LoadFragment declarations or
        let auto-build re-create xxmp.pas from proto template
        and update your xxmFReg.pas copy
	#############################################
- add 'M' to default .cfg to enable creating dcu's
- xxmGecko xpi package for easy install
- internal revision of TxxmContext and TxxmProjectEntry objects
- xxmHeader: added IxxmParameterCollection interface to allow to add parameters (e.g. when parsing URL's in LoadPage)
- added URL routing demo (demonstrating IxxmParameterCollection.AddParameter)
- replaced TXxmContextString enumeration with constants
- constants also work with Context.Parameter[] (and Context[] because it's the default index property)

v1.0.3.266

- xxm.pas: all TStream are now IStream
    ### ATTENTION ### ATTENTION ### ATTENTION ###
    This will break all existing projects
	that use SendStream or PostData
	Update code using TStreamAdapter where needed
	#############################################
- add missing trailing comma in uses-clause sections ([[@]])
- issue uploading files using xxmApache
- issue uploading files using xxmGecko

v1.0.2.262

- fixed issue mapping line number on last code-section
- fixed file download issue
- keep cleaner whitespace when changing Web.xxmp XML
- a more performant HTMLEncode
- fixed issue with xxmStream.pas' TxxmOutputStream
- xxmHttp provides virtual methods for new project that inherit from it
