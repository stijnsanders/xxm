[[@Windows,xxmSession,xxmHeaders,]][[:

type
  TdemoProgressAgent=class(TInterfacedObject, IxxmUploadProgressAgent)
  private
    FSession:TxxmSession;
    procedure ReportProgress(const FieldName, FileName: AnsiString; Position: integer);
  public
    constructor Create(ASession: TxxmSession);
  end;

constructor TdemoProgressAgent.Create(ASession: TxxmSession);
begin
  inherited Create;
  FSession:=ASession;
end;

procedure TdemoProgressAgent.ReportProgress(const FieldName, FileName: AnsiString; Position: integer);
begin
  FSession.UploadProgressFileName:=FileName;
  FSession.UploadProgressPosition:=Position;
  Sleep(250);//slow it down for this demonstration
end;

]][[!var
doc:IXxmParameterPostFile;
dir:string;
]][[

SetLength(dir,MAX_PATH);
SetLength(dir,GetModuleFileName(HInstance,PChar(dir),MAX_PATH));
dir:=ExtractFilePath(dir)+'files\';

//TODO: support multiple concurrent uploads per session with upload identifiers
Session.UploadProgressFileName:='...';
Session.UploadProgressLength:=StrToIntDef((Context as IxxmHttpHeaders).GetRequestHeaders['Content-Length'],0);
Session.UploadProgressPosition:=0;
(Context as IxxmUploadProgressService).AttachAgent(TdemoProgressAgent.Create(Session),
  xxmUploadProgressAttach_PostData,0);
  //xxmUploadProgressAttach_FileFields,0);

doc:=Context.Parameter['doc'] as IXxmParameterPostFile;
while doc<>nil do
 begin
  if doc.Value<>'' then
    doc.SaveToFile(dir+ExtractFileName(doc.Value));
  doc:=doc.NextBySameName as IXxmParameterPostFile;
 end;


Context.Redirect('Default.xxm',true);

]]